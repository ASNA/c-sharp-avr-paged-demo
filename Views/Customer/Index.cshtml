@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@model IEnumerable<mvc_with_avr.Models.CustomerPageModel>

@{
    ViewBag.Title = "Customer List";
    ViewBag.Message = "Written using C# referencing a couple of ASNA Visual RPG and DataGate DLLs";
    string disabledPreviousButton = (ViewBag.NextPage == 2) ? "disabled-anchor" : "";
    string disabledNextButton = (ViewBag.MorePages) ? "" : "disabled-anchor";
    string disabledFilterButton = (Session["filter"] == null) ? "disabled-anchor" : "";
    string filter = (Session["filter"] != null) ? Session["filter"].ToString() : "";
}

<h2>@ViewBag.Title</h2>
<h3>@ViewBag.Message</h3>

<div class="right-justified-container">

    @using (Html.BeginForm("SetFilter", "Customer", FormMethod.Post, new { @class = "mr-1" }))
    {
        <input type="Text" name="filter" id="filter" value="@filter" />
        <button class="btn btn-primary btn-sm" type="submit">Filter</button>
    }

    <div>
        <a href="@Url.Action("clearFilter", "customer")"
           class="btn btn-primary btn-sm mr-3 @disabledFilterButton">Clear filter</a>
    </div>

    <div>
        <a href="@Url.Action("index", "customer", new { page = 1 })"
           class="btn btn-primary btn-sm mr-1 @disabledPreviousButton">First page</a>

        <a href="@Url.Action("index", "customer", new { page = ViewBag.PrevPage })"
           class="btn btn-primary btn-sm mr-1 @disabledPreviousButton">Prev page</a>

        <a href="@Url.Action("index", "customer", new { page = ViewBag.NextPage })"
           class="btn btn-primary btn-sm @disabledNextButton">Next page</a>
    </div>
</div>

<table class="table zebra-stripe">
    <tr>
        <th class="col-number">
            Number
        </th>
        <th class="col-name">
            Name
        </th>
        <th class="col-action">Action</th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.CMCustNo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CMName)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", "Customer", new { id = item.CMCustNo }) |
                @Html.ActionLink("Delete", "Delete", "Customer", new { id = item.CMCustNo })
            </td>
        </tr>
    }
</table>

<div class="right-justified-container">
    Note that the Edit and Delete buttons aren't hooked up.
</div>
